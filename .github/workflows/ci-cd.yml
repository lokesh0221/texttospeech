name: CI & CD

on:
  push:
    branches: [ main ]
    tags:     # trigger CD on version tags, e.g. v1.2.3
      - 'v*.*.*'
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest

      - name: Lint with flake8
        run: |
          flake8 .

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

  build-docker:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t texttospeech:ci .

      # Optional: push to Docker Hub or GitHub Container Registry
      # - name: Log in to GHCR
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Push image
      #   run: |
      #     docker tag texttospeech:ci ghcr.io/${{ github.repository }}/texttospeech:${{ github.sha }}
      #     docker push ghcr.io/${{ github.repository }}/texttospeech:${{ github.sha }}

  deploy-to-pypi:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with: python-version: '3.10'

      - name: Build & publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          pip install build twine
          python -m build
          twine upload dist/*
